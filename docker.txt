# docker list images
docker images

# run container
docker run -it busybox sh

=> -d flag will detach the container from the terminal so it can run independently
=> -it flag attaches us to a bash terminal inside the container

# list containers
docker ps -a 

# remove containers
docker rm 398473948 4987498 (list of container ids)
OR 
docker rm $(docker ps -a -q -f status=exited)

# prune command
docker container prune

# copying docker images to another machine##
#save docker images as tar
docker save -o <path for generated tar file> <image name>
e.g. docker save -o c:/myfile.tar centos:16

# load docker image to destination docker daemon
docker load -i <path to image tar file>	

# get a bash command line in a running container
docker exec -it <container name> /bin/bash 

# to skip confirmation prompts, use -f --force
docker container prune -f

# to get the container id from inside the container
use the environment variable $HOSTNAME or cat /etc/hostname

# to push logs to cloudwatch
# this does not create a log-group by default
docker run -d --log-driver=awslogs --log-opt awslogs-region=us-east-1 --log-opt awslogs-group=wordfreq_premium_container_logs -e CONTAINERS_TABLE_NAME="containers" wordfreq-app:latest

# to create a log-group by default
  --log-opt awslogs-create-group=true
  
# give permissions to a user to use docker without sudo - by adding them to the 'docker' usergroup
	sudo usermod -aG docker $USER
	
# create the docker user group if not already created using:
	sudo groupadd docker